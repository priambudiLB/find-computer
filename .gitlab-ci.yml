image: docker:latest
services:
  - docker:dind

variables:
  CONTAINER_GITLAB_IMAGE: registry.gitlab.com/priambudi/bagas-findcomputer:latest
  CONTAINER_HEROKU_IMAGE: registry.heroku.com/bagas-findcomputer
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

stages:
  - build
  - test
  - deploy

springboot-build:
  image: maven:3-jdk-8
  stage: build
  script: "cd backend && mvn package -B"
  artifacts:
    paths:
      - backend/target/FindComputer-0.0.1-SNAPSHOT.jar
  
gatsby-build:
  image: node:latest
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run-script build
  artifacts:
    paths:
      - frontend/public

gatsby-test:
  image: node:latest
  stage: test
  script: "cd frontend && npm test"

springboot-test:
  image: maven:3-jdk-8
  stage: test
  script: "cd backend && mvn clean test -P unit-test"

docker-build-deploy:
  stage: deploy
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t $CONTAINER_GITLAB_IMAGE .
    - docker login -u gitlab-ci-token -p $GITLAB_CI_TOKEN registry.gitlab.com
    - docker push $CONTAINER_GITLAB_IMAGE

springboot-ec2-deploy:
  image: alpine
  stage: deploy
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - scp -o StrictHostKeyChecking=no backend/target/FindComputer-0.0.1-SNAPSHOT.jar ubuntu@ec2-54-254-211-230.ap-southeast-1.compute.amazonaws.com:~/BAGAS
    - ssh -o StrictHostKeyChecking=no ubuntu@ec2-54-254-211-230.ap-southeast-1.compute.amazonaws.com "cd BAGAS; ps aux  |  grep -i java  |  awk '{print $2}'  |  xargs sudo kill -9; ps aux  |  grep -i java  |  awk '{print $2}'  |  xargs sudo kill -9; nohup java -Xmx300m -Xss512k -Djava.security.egd\=file:/dev/./urandom -jar FindComputer-0.0.1-SNAPSHOT.jar &; exit 0"

gatsby-deploy:
  image: python:latest
  stage: deploy
  script:
    - cd frontend
    - pip install awscli
    - aws s3 sync public s3://find-computer/
